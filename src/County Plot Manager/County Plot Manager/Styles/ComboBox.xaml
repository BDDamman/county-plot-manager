<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PlotManager.UI.Styles">



	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="ColorsAndBrushes.xaml"/>
		<ResourceDictionary Source="ContentPresenter.xaml"/>
		<ResourceDictionary Source="ScrollViewer.xaml"/>
	</ResourceDictionary.MergedDictionaries>


	<!--Style for the little drop-down arrow on the right side
    of the combobox.-->
	<Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Height="25">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="25" />
						</Grid.ColumnDefinitions>

						<Border x:Name="ToggleBorder"
										Background="{StaticResource brush_Base_100}"
										BorderBrush="{StaticResource brush_Base_Dark}"
										BorderThickness="1,1,1,1"
										Grid.ColumnSpan="2" />

						<Border Margin="0"
										Background="White"
										BorderBrush="{StaticResource brush_Base_Dark}"
										BorderThickness="1,1,0,1"
										Grid.Column="0" />

						<Path Name="Arrow"
										 Fill="White"
										 StrokeThickness="0"
										 Data="M 3 5 L 12.5 15.45 L 22 5 L 22 10 L 12.5 20.45
													 L3 10 z" 
										 Grid.Column="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter Property="Panel.Background" 
                                    TargetName="ToggleBorder" 
                                    Value="{StaticResource brush_Base_75}"/>
							<Setter Property="Shape.Fill" 
                                    TargetName="Arrow" 
                                    Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>

						<Trigger Property="ToggleButton.IsChecked" Value="True">
							<Setter Property="Panel.Background" 
                                    TargetName="ToggleBorder" 
                                    Value="White"/>
							<Setter Property="Shape.Fill" 
                                    TargetName="Arrow" 
                                    Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Textbox used to display the contents of the combobox.-->
	<Style x:Key="ComboBoxTextBox"
           TargetType="{x:Type TextBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox" >
					<Border Name="PART_ContentHost"
                            Background="{TemplateBinding Panel.Background}"
                            Focusable="False"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--Item style for the items in the drop-down portion of the combobox.-->
	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="UIElement.SnapsToDevicePixels" 
                Value="True"/>
		<Setter Property="FrameworkElement.FocusVisualStyle" 
                Value="{x:Null}"/>
		<Setter Property="TextElement.Foreground"  
                Value="Black"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" 
                Value="True"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Name="Border"
									SnapsToDevicePixels="True"
									Padding="2,2,2,2">
						<ContentPresenter Style="{StaticResource PresenterLargeFont}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.AlternationIndex"
										 Value="1">
							<Setter TargetName="Border" 
											Property="Background"
											Value="{StaticResource brush_Base_25}"/>
						</Trigger>
						<Trigger Property="ComboBoxItem.IsHighlighted" 
										 Value="True">
							<Setter Property="Panel.Background" 
											TargetName="Border" 
											Value="{StaticResource brush_Base_75}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="ComboBoxSimple" 
           TargetType="{x:Type ComboBox}">
		<Setter Property="UIElement.SnapsToDevicePixels" 
                Value="True"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" 
                Value="True"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
                Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" 
                Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" 
                Value="True"/>
		<Setter Property="TextElement.Foreground" 
                Value="Black"/>
		<Setter Property="FrameworkElement.FocusVisualStyle" 
                Value="{x:Null}"/>
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="VerticalAlignment"
						Value="Top"/>
		<Setter Property="MinHeight"
                Value="25"/>
		<Setter Property="MinWidth"
						Value="75"/>
		<Setter Property="AlternationCount"
                Value="2"/>
		<Setter Property="Margin"
                Value="10,0,10,5"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Rectangle Name="rctFocused" 
											 Fill="Transparent"
											 Stroke="{StaticResource brush_Base_100}"
											 StrokeThickness="1"
											 StrokeDashArray="3,1.5"
											 Margin="-2"
											 Visibility="Hidden"/>
						<ToggleButton Style="{StaticResource ComboBoxToggleButton}" 
													ClickMode="Press"
													Name="ToggleButton"
													IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
													Focusable="False"
													Grid.Column="2"/>
						<ContentPresenter Style="{StaticResource PresenterLargeFont}" 
															Margin="3,3,25,3"
															HorizontalAlignment="Left"
															Name="ContentSite"
															VerticalAlignment="Center"
															Content="{TemplateBinding SelectionBoxItem}"
															ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
															ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
															IsHitTestVisible="False" />
						<TextBox Style="{StaticResource ComboBoxTextBox}"
										 Margin="3,3,25,3"
										 Visibility="Hidden"
										 HorizontalAlignment="Left"
										 Name="PART_EditableTextBox"
										 Background="White"
										 VerticalAlignment="Center"
										 IsReadOnly="{TemplateBinding IsReadOnly}"
										 Focusable="True"
										 xml:space="preserve"/>
						<Popup Placement="Bottom"
									 Name="Popup"
									 Focusable="False"
									 AllowsTransparency="True"
									 IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
									 PopupAnimation="Fade">
							<Grid MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
										MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
										Name="DropDown"
										SnapsToDevicePixels="True">
								<Border Background="White" 
												BorderBrush="{StaticResource brush_Base_Dark}"
												BorderThickness="1,1,1,1"
												Name="DropDownBorder"/>
								<ScrollViewer Margin="4,6,4,6"
															SnapsToDevicePixels="True">
									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
						<Border x:Name="borderDisabled" 
										Background="{StaticResource brush_Disabled}"
										Visibility="Hidden"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" 
										 Value="False">
							<Setter Property="FrameworkElement.MinHeight" 
											TargetName="DropDownBorder" 
											Value="95"/>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled" 
										 Value="False">
							<Setter TargetName="borderDisabled" 
											Property="Visibility" 
											Value="Visible"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" 
										 Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" 
											Value="False"/>
						</Trigger>
						<Trigger Property="Window.AllowsTransparency" 
										 SourceName="Popup" Value="True">
							<Setter Property="Border.CornerRadius" 
											TargetName="DropDownBorder" 
											Value="1"/>
							<Setter Property="FrameworkElement.Margin" 
											TargetName="DropDownBorder" 
											Value="0,2,0,0"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" 
										 Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" 
											Value="False"/>
							<Setter Property="UIElement.Visibility" 
											TargetName="PART_EditableTextBox" 
											Value="Visible"/>
							<Setter Property="UIElement.Visibility" 
											TargetName="ContentSite" 
											Value="Hidden"/>
						</Trigger>
						<EventTrigger RoutedEvent="ComboBox.GotKeyboardFocus">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																								 Storyboard.TargetName="rctFocused">
										<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
											<DiscreteObjectKeyFrame.Value>
												<Visibility>Visible</Visibility>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="ComboBox.LostKeyboardFocus">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																								 Storyboard.TargetName="rctFocused">
										<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
											<DiscreteObjectKeyFrame.Value>
												<Visibility>Hidden</Visibility>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>