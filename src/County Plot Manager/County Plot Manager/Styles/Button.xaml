<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PlotManager.UI.Styles">


	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="ColorsAndBrushes.xaml"/>
		<ResourceDictionary Source="ContentPresenter.xaml"/>
	</ResourceDictionary.MergedDictionaries>



	<!--Minimize button style on the main window title bar.-->
	<Style x:Key="ButtonMin"
				 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="borderMain" 
                Height="25" Width="25"
                Background="{StaticResource brush_Base_Dark}">
						<Path x:Name="pathGlyph" 
                    Fill="White" StrokeThickness="0"
                    Data="M 3 19 L 22 19 L 22 22 L 3 22 L 3 3 z"/>
						<Border x:Name="borderDisabled"
                      Visibility="Hidden"
                      Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
                         Value="True">
							<Setter TargetName="borderMain"
                            Property="Background"
                            Value="{StaticResource brush_Base_75}"/>
							<Setter TargetName="pathGlyph"
                            Property="Fill"
                            Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
                         Value="True">
							<Setter TargetName="borderMain"
                            Property="Background"
                            Value="White"/>
							<Setter TargetName="pathGlyph"
                            Property="Fill"
                            Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                         Value="False">
							<Setter TargetName="borderDisabled"
                            Property="Visibility"
                            Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Maximize button style on the main window title bar.-->
	<Style x:Key="ButtonMax"
				 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="borderMain" 
									Height="25" Width="25"
									Background="{StaticResource brush_Base_Dark}">
						<Path x:Name="pathGlyph" 
									Fill="White" StrokeThickness="0"
									Data="M 3 3 L 22 3 L 22 22 L 3 22 L 3 3 z 
									M 6 6 L 19 6 L 19 19 L 6 19 L 6 6 z"/>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_75}"/>
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="White"/>
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Restore button style on the main window title bar.-->
	<Style x:Key="ButtonRestore"
				 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="borderMain" 
								Height="25" Width="25"
								Background="{StaticResource brush_Base_Dark}">
						<Path x:Name="pathGlyph1" 
									Fill="White" StrokeThickness="0"
									Data="M 3 3 L 16 3 L 16 16 L 3 16 L 3 3 z 
									M 6 6 L 13 6 L 13 13 L 6 13 L 6 6 z"/>
						<Path x:Name="pathGlyph2" 
									Fill="White" StrokeThickness="0"
									Data="M 9 9 L 22 9 L 22 22 L 9 22 L 9 9 z 
									M 12 12 L 19 12 L 19 19 L 12 19 L 12 12 z"/>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_75}"/>
							<Setter TargetName="pathGlyph1"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
							<Setter TargetName="pathGlyph2"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="White"/>
							<Setter TargetName="pathGlyph1"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
							<Setter TargetName="pathGlyph2"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Close button style on the main window title bar.-->
	<Style x:Key="ButtonClose"
				 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="borderMain" 
									Height="25" Width="25"
									Background="{StaticResource brush_Base_Dark}">
						<Path x:Name="pathGlyph" 
									Fill="White" StrokeThickness="0"
									Data="M 3 3 L 7 3 L 12.5 9.9667 L 18 3 L 22 3 
												L 14.5 12.5 L 22 22 L 18 22 L 12.5 15.0333 
												L 7 22 L 3 22 L 10.5 12.5 L 3 3 z"/>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_75}"/>
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="White"/>
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--Style for the standard command button.-->
	<Style x:Key="ButtonCommand"
			 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="borderFocused" Margin="9" 
										Visibility="Hidden"
										Background="{StaticResource brush_Base_50}">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="5"/>
							</Border.BitmapEffect>
						</Border>
						<Border x:Name="borderMain"
										Margin="10" Height="25" MinWidth="75"
										Background="{StaticResource brush_Base_100}"
										BorderBrush="{StaticResource brush_Base_Dark}"
										BorderThickness="1"
										TextBlock.Foreground="White"
										UseLayoutRounding="True"
										SnapsToDevicePixels="True"
										Cursor="Hand">
							<ContentPresenter Style="{StaticResource PresenterButton}"
																TextBlock.Foreground="White"/>
						</Border>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_50}"/>
							<Setter TargetName="borderMain"
											Property="TextBlock.Foreground"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_25}"/>
							<Setter TargetName="borderMain"
											Property="TextBlock.Foreground"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
						<EventTrigger RoutedEvent="Button.GotKeyboardFocus">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																								 Storyboard.TargetName="borderFocused">
										<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
											<DiscreteObjectKeyFrame.Value>
												<Visibility>Visible</Visibility>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.LostKeyboardFocus">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																								 Storyboard.TargetName="borderFocused">
										<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
											<DiscreteObjectKeyFrame.Value>
												<Visibility>Hidden</Visibility>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Style for the standard Help button.-->
	<Style x:Key="ButtonHelp"
			 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Height="25" Width="22">
						<Border x:Name="borderMain"
                    Background="{StaticResource brush_Base_100}"
                    BorderBrush="{StaticResource brush_Base_Dark}"
                    BorderThickness="1"
                    UseLayoutRounding="True"
                    SnapsToDevicePixels="True"
                    Cursor="Hand">
						</Border>
						<Path x:Name="pathGlyph1" 
									Fill="White" StrokeThickness="0"
									Data="m 8.1088148,12.808 0,4.37031 4.4689142,0 0,-2.881167 C 17.27397,12.678 19.037846,9.169 17.30571,5.6697 15.480006,1.9811 8.8814127,2.5349 5.000005,3.9377 l 0,3.93819 0.5829018,-0.0057 c 1.8660441,-1.166571 5.7557222,-2.460868 7.1243562,-0.04774 0.923609,1.62847 -1.085313,4.394359 -4.5984482,4.985395 z"/>
						<Path x:Name="pathGlyph2" 
									Fill="White" StrokeThickness="0"
									Data="M 8.12 22 L 8.12 18.615 L 12.57 18.615 L 12.57 22 L 8.12 22 z"/>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_75}"/>
							<Setter TargetName="pathGlyph1"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
							<Setter TargetName="pathGlyph2"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="White"/>
							<Setter TargetName="pathGlyph1"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
							<Setter TargetName="pathGlyph2"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Close button style on the main window title bar.-->
	<Style x:Key="ButtonDelete"
				 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="borderMain" Background="#01FFFFFF"
									Height="20" Width="20">
						<Viewbox Width="14" Height="14" Stretch="Uniform">
						<Path x:Name="pathGlyph" 
									Fill="{StaticResource brush_Base_Dark}" StrokeThickness="0"
									Data="M 3 3 L 7 3 L 12.5 9.9667 L 18 3 L 22 3 
												L 14.5 12.5 L 22 22 L 18 22 L 12.5 15.0333 
												L 7 22 L 3 22 L 10.5 12.5 L 3 3 z"/>
						</Viewbox>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_75}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Style for the <- 'Arrow Left' button.-->
	<Style x:Key="ButtonArrowLeft"
           TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Height="25" Width="25">
						<Border x:Name="borderMain"
										Background="{StaticResource brush_Base_100}"
										BorderBrush="{StaticResource brush_Base_Dark}"
										BorderThickness="1"
										UseLayoutRounding="True"
										SnapsToDevicePixels="True"
										Cursor="Hand">
						</Border>
						<Path x:Name="pathGlyph" 
									Fill="White" StrokeThickness="0"
									Data="m 4.55 12.55 L 15 3 L 20 3 L 9.55 12.5 
                                          L 20 22 L 15 22 Z"/>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_75}"/>
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="White"/>
							<Setter TargetName="pathGlyph"
											Property="Fill"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Style for the <- 'Arrow Right' button.-->
	<Style x:Key="ButtonArrowRight"
           TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Height="25" Width="25">
						<Border x:Name="borderMain"
													Background="{StaticResource brush_Base_100}"
													BorderBrush="{StaticResource brush_Base_Dark}"
													BorderThickness="1"
													UseLayoutRounding="True"
													SnapsToDevicePixels="True"
													Cursor="Hand">
						</Border>
						<Path x:Name="pathGlyph" 
												Fill="White" StrokeThickness="0"
												Data="m 5 3 L 10 3 L 20.45 12.5 L 10 22 
												L 5 22 L 15.45 12.5 Z"/>
						<Border x:Name="borderDisabled"
													Visibility="Hidden"
													Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
													 Value="True">
							<Setter TargetName="borderMain"
														Property="Background"
														Value="{StaticResource brush_Base_75}"/>
							<Setter TargetName="pathGlyph"
														Property="Fill"
														Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
													 Value="True">
							<Setter TargetName="borderMain"
														Property="Background"
														Value="White"/>
							<Setter TargetName="pathGlyph"
														Property="Fill"
														Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
													 Value="False">
							<Setter TargetName="borderDisabled"
														Property="Visibility"
														Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Style for the small command button.-->
	<Style x:Key="ButtonSmall"
			 TargetType="{x:Type Button}">
		<Setter Property="HorizontalAlignment"
						Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border x:Name="borderFocused" Margin="0" 
										Visibility="Hidden"
										Background="{StaticResource brush_Base_50}">
							<Border.BitmapEffect>
								<BlurBitmapEffect Radius="5"/>
							</Border.BitmapEffect>
						</Border>
						<Border x:Name="borderMain"
										Margin="2" MinWidth="30"
										Background="{StaticResource brush_Base_100}"
										BorderBrush="{StaticResource brush_Base_Dark}"
										BorderThickness="1"
										TextBlock.Foreground="White"
										UseLayoutRounding="True"
										SnapsToDevicePixels="True"
										Cursor="Hand">
							<ContentPresenter Style="{StaticResource PresenterButtonSmall}"
																TextBlock.Foreground="White"/>
						</Border>
						<Border x:Name="borderDisabled"
										Visibility="Hidden"
										Background="{StaticResource brush_Disabled}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_50}"/>
							<Setter TargetName="borderMain"
											Property="TextBlock.Foreground"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsPressed"
										 Value="True">
							<Setter TargetName="borderMain"
											Property="Background"
											Value="{StaticResource brush_Base_25}"/>
							<Setter TargetName="borderMain"
											Property="TextBlock.Foreground"
											Value="{StaticResource brush_Base_Dark}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
										 Value="False">
							<Setter TargetName="borderDisabled"
											Property="Visibility"
											Value="Visible"/>
						</Trigger>
						<EventTrigger RoutedEvent="Button.GotKeyboardFocus">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																								 Storyboard.TargetName="borderFocused">
										<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
											<DiscreteObjectKeyFrame.Value>
												<Visibility>Visible</Visibility>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.LostKeyboardFocus">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
																								 Storyboard.TargetName="borderFocused">
										<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
											<DiscreteObjectKeyFrame.Value>
												<Visibility>Hidden</Visibility>
											</DiscreteObjectKeyFrame.Value>
										</DiscreteObjectKeyFrame>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>